# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, uncomment below!
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
#  Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*~
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Operating System Files

# Windows specific
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Windows Python specific
*.exe
*.bat
Scripts/
pyvenv.cfg

# FastAPI server logs
uvicorn.log
server.log

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project Specific Files

# Environment files with sensitive data
.env
.env.local
.env.development
.env.production
.env.test
config.py
config_local.py
secrets.json

# Keep Azure template but not actual config
# .env.azure is a template - actual values should be in Azure App Settings

# Database files and backups
*.db
*.sqlite
*.sqlite3
*.db-journal
database_backup/
*.sql.backup
*.bak

# Audio/Video files (uploads and temporary)
uploads/
temp/
temporary/
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.mp3
*.wav
*.aac
*.ogg
*.m4a
*_audio.wav
*_temp.*

# Installation and deployment files (not needed for execution)
install_sql_express_driver.md
deploy-azure.sh

# Sample and test files
sample_queries.sql
test_database.py
check_drivers.py

# Logs
logs/
*.log
*.log.*
app.log
error.log
access.log
debug.log

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.orig

# Docker files - removed as not required for this project execution
# These files are not needed for basic project execution
Dockerfile
docker-compose.yml
docker-compose.prod.yml
DOCKER_README.md
.dockerignore
docker-compose.override.yml
.docker/

# SSL Certificates
*.pem
*.key
*.crt
*.cer
*.p12
*.pfx
ssl/
certs/
certificates/

# API Keys and Credentials
api_keys.txt
credentials.json
service_account.json
.service_account_key.json

# Test files
test_uploads/
test_videos/
sample_data/
mock_data/

# Cache directories
.cache/
cache/
__pycache__/

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package files
*.tgz
*.tar.gz

# Documentation build
_build/
site/

# Backup files
*.backup
*~

# Custom application files
user_uploads/
processed_videos/
transcriptions/
evaluation_files/

# FastAPI specific
*.pyc
*.pyo
*.pyd
__pycache__/
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Audio/Video processing temporary files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.mp3
*.wav
*.aac
*.ogg
*.m4a
*_audio.wav
*_temp.*
temp_video_*
temp_audio_*

# SQL Server and database files
*.mdf
*.ldf
*.sdf

# Configuration files with sensitive data (keep template)
config.py
# Keep config_template.py for reference

# Performance and profiling
*.prof
*.pstats
profile_output/

# Machine learning models (if any)
*.model
*.pkl
models/
checkpoints/

# Generated documentation
docs/build/
docs/_build/ 