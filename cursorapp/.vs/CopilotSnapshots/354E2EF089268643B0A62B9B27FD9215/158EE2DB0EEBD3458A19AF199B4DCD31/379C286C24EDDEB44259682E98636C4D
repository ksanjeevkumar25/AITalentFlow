using Microsoft.EntityFrameworkCore;
using LoginApp.Models;

namespace LoginApp.Data
{
    public class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {
        }

        public DbSet<Skill> Skills { get; set; }
        public DbSet<Skill> Skill { get; set; } // Singular table name
        public DbSet<UserSkill> UserSkills { get; set; }
        public DbSet<EmployeeSkills> EmployeeSkills { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Skill>(entity =>
            {
                entity.HasKey(e => e.SkillID);
                entity.Property(e => e.SkillName).IsRequired().HasMaxLength(255);
                entity.Property(e => e.SkillDescription);
            });

            modelBuilder.Entity<UserSkill>(entity =>
            {
                entity.HasKey(e => e.Id);
                entity.Property(e => e.UserName).IsRequired();
                entity.Property(e => e.Rating).IsRequired().HasMaxLength(20);
                entity.Property(e => e.CreatedDate).HasDefaultValueSql("GETDATE()");

                entity.HasOne(e => e.Skill)
                      .WithMany()
                      .HasForeignKey(e => e.SkillId)
                      .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity<EmployeeSkills>(entity =>
            {
                entity.HasKey(e => e.EmployeeSkillID);
                entity.Property(e => e.EmployeeID).IsRequired();
                entity.Property(e => e.SkillID).IsRequired();
                entity.Property(e => e.EmployeeSkillModifiedDate).HasColumnType("date");
                entity.Property(e => e.SupervisorRatingUpdatedOn).HasColumnType("date");
                entity.Property(e => e.AIEvaluationDate).HasColumnType("date");
                entity.Property(e => e.EmployeeLastWorkedOnThisSkill).HasColumnType("date");

                entity.HasOne(e => e.Skill)
                      .WithMany()
                      .HasForeignKey(e => e.SkillID)
                      .OnDelete(DeleteBehavior.Cascade);
            });
        }
    }
} 